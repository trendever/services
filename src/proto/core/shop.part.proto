service ShopService {
  // returns a public profile of the shop
  rpc GetShopProfile (ShopProfileRequest) returns (ShopProfileReply) {}

  rpc FindOrCreateShopForSupplier(FindOrCreateShopForSupplierRequest) returns (FindOrCreateShopForSupplierReply) {}
}

// representation of shop model
message Shop {
  int64 id = 1;

  int64 supplier_id = 2;
  // @TODO most of data below will filled from this struct for compability
  // we need to update front and remove duplicate fields after it
  User supplier = 3;

  uint64 instagram_id = 4;
  string instagram_username = 5;
  string instagram_fullname = 6;
  string instagram_avatar_url = 7;
  string instagram_caption = 8;
  string instagram_website = 9;

  string payment_rules = 10;
  string shipping_rules = 11;
  string caption = 12;
  repeated User sellers = 13;

  string avatar_url = 14;
  string slogan = 15;

  bool available = 16;

  // unix time, seconds
  uint64 created_at = 17;

  // true if shop has no active monetization plan
  bool suspended = 18;
  MonezationPlan plan = 19;
  // may be zero for plans without expiration
  // DO NOT use this field to determinate whether shop has active plan, check "suspended" field instead
  int64 plan_expires_at = 20;
}


message ShopProfileRequest {
  oneof search_by {
    string instagram_name = 1;
    uint64 id = 2;
  }
}

message ShopProfileReply {
  Shop shop = 1;
}

message FindOrCreateShopForSupplierRequest {
  uint64 supplier_id = 1;
  // when false shop will not be recreated if it was deleted
  bool recreate_deleted = 2;
}

message FindOrCreateShopForSupplierReply {
  uint64 shop_id = 1;
  bool deleted = 2;
  string error = 3;
}
