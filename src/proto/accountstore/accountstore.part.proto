service AccountStoreService {
  rpc Add(AddRequest) returns (AddReply) {}
  rpc Confirm(ConfirmRequest) returns (ConfirmReply) {}
  rpc MarkInvalid(MarkInvalidRequest) returns (MarkInvalidReply) {}
  rpc Search(SearchRequest) returns (SearchReply) {}
  rpc SetProxy(SetProxyRequest) returns (SetProxyReply) {}
  rpc SetDebug(SetDebugRequest) returns (SetDebugReply) {}
}

enum Role {
  // real user, probably shop
  User = 0;

  Savetrend = 1;
  Wantit = 2;

  // minor bots
  AuxPrivate = 3; // any bots for fetching purposes
  AuxPublic = 4;  // public bots, for example to create chats
}

message Account {
  string instagram_username = 1;
  uint64 instagram_id = 2;
  string cookie = 3;
  bool valid = 4;
  Role role = 5;
  uint64 owner_id = 6;
  int64 created_at = 7;
  uint64 created_at_ago = 8;
  string proxy = 9;
}

message AddRequest {
  string instagram_username = 1;
  string password = 2;
  Role role = 3;
  uint64 owner_id = 4;
  bool prefer_email = 5;
  string proxy = 6;
}

message AddReply {
  bool needCode = 2;
}

message ConfirmRequest {
  string instagram_username = 1;
  uint64 instagram_id = 2;
  string code = 3;
  string password = 4;
}

message ConfirmReply {
}

message MarkInvalidRequest {
  string instagram_username = 1;
  uint64 instagram_id = 2;
  string reason = 3;
}

message MarkInvalidReply {
}

message SearchRequest {
  repeated Role roles = 1;
  bool include_invalids = 2;
  string instagram_username = 3;
  uint64 instagram_id = 4;
  bool hide_private = 5;
  uint64 owner_id = 6;
}

message SearchReply {
  repeated Account accounts = 1;
}

message SetProxyRequest {
  string instagram_username = 1;
  string proxy = 2;
}

message SetProxyReply {

}

message SetDebugRequest {
  string instagram_username = 1;
  bool debug = 2;
}

message SetDebugReply {

}
