// Automatically generated by MockGen. DO NOT EDIT!
// Source: payments/models (interfaces: Gateway)

package fixtures

import (
	gomock "github.com/golang/mock/gomock"
	models "payments/models"
)

// Mock of Gateway interface
type MockGateway struct {
	ctrl     *gomock.Controller
	recorder *_MockGatewayRecorder
}

// Recorder for MockGateway (not exported)
type _MockGatewayRecorder struct {
	mock *MockGateway
}

func NewMockGateway(ctrl *gomock.Controller) *MockGateway {
	mock := &MockGateway{ctrl: ctrl}
	mock.recorder = &_MockGatewayRecorder{mock}
	return mock
}

func (_m *MockGateway) EXPECT() *_MockGatewayRecorder {
	return _m.recorder
}

func (_m *MockGateway) Buy(_param0 *models.Payment, _param1 string) (*models.Session, error) {
	ret := _m.ctrl.Call(_m, "Buy", _param0, _param1)
	ret0, _ := ret[0].(*models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockGatewayRecorder) Buy(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Buy", arg0, arg1)
}

func (_m *MockGateway) CheckStatus(_param0 *models.Session) (bool, error) {
	ret := _m.ctrl.Call(_m, "CheckStatus", _param0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockGatewayRecorder) CheckStatus(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CheckStatus", arg0)
}

func (_m *MockGateway) GatewayType() string {
	ret := _m.ctrl.Call(_m, "GatewayType")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockGatewayRecorder) GatewayType() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GatewayType")
}

func (_m *MockGateway) Redirect(_param0 *models.Session) string {
	ret := _m.ctrl.Call(_m, "Redirect", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockGatewayRecorder) Redirect(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Redirect", arg0)
}
