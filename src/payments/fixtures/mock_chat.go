// Automatically generated by MockGen. DO NOT EDIT!
// Source: payments/api (interfaces: ChatNotifier)

package fixtures

import (
	gomock "github.com/golang/mock/gomock"
	models "payments/models"
)

// Mock of ChatNotifier interface
type MockChatNotifier struct {
	ctrl     *gomock.Controller
	recorder *_MockChatNotifierRecorder
}

// Recorder for MockChatNotifier (not exported)
type _MockChatNotifierRecorder struct {
	mock *MockChatNotifier
}

func NewMockChatNotifier(ctrl *gomock.Controller) *MockChatNotifier {
	mock := &MockChatNotifier{ctrl: ctrl}
	mock.recorder = &_MockChatNotifierRecorder{mock}
	return mock
}

func (_m *MockChatNotifier) EXPECT() *_MockChatNotifierRecorder {
	return _m.recorder
}

func (_m *MockChatNotifier) SendPaymentToChat(_param0 *models.Payment) error {
	ret := _m.ctrl.Call(_m, "SendPaymentToChat", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockChatNotifierRecorder) SendPaymentToChat(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendPaymentToChat", arg0)
}

func (_m *MockChatNotifier) SendSessionToChat(_param0 *models.Session) error {
	ret := _m.ctrl.Call(_m, "SendSessionToChat", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockChatNotifierRecorder) SendSessionToChat(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendSessionToChat", arg0)
}
