// Automatically generated by MockGen. DO NOT EDIT!
// Source: core/models (interfaces: CardRepository)

package fixtures

import (
	models "core/models"
	gomock "github.com/golang/mock/gomock"
)

// Mock of CardRepository interface
type MockCardRepository struct {
	ctrl     *gomock.Controller
	recorder *_MockCardRepositoryRecorder
}

// Recorder for MockCardRepository (not exported)
type _MockCardRepositoryRecorder struct {
	mock *MockCardRepository
}

func NewMockCardRepository(ctrl *gomock.Controller) *MockCardRepository {
	mock := &MockCardRepository{ctrl: ctrl}
	mock.recorder = &_MockCardRepositoryRecorder{mock}
	return mock
}

func (_m *MockCardRepository) EXPECT() *_MockCardRepositoryRecorder {
	return _m.recorder
}

func (_m *MockCardRepository) CreateCard(_param0 *models.ShopCard) error {
	ret := _m.ctrl.Call(_m, "CreateCard", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCardRepositoryRecorder) CreateCard(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateCard", arg0)
}

func (_m *MockCardRepository) DeleteCardByID(_param0 uint) error {
	ret := _m.ctrl.Call(_m, "DeleteCardByID", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCardRepositoryRecorder) DeleteCardByID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteCardByID", arg0)
}

func (_m *MockCardRepository) GetCardByID(_param0 uint) (*models.ShopCard, error) {
	ret := _m.ctrl.Call(_m, "GetCardByID", _param0)
	ret0, _ := ret[0].(*models.ShopCard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCardRepositoryRecorder) GetCardByID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCardByID", arg0)
}

func (_m *MockCardRepository) GetCardsForShop(_param0 uint) ([]models.ShopCard, error) {
	ret := _m.ctrl.Call(_m, "GetCardsForShop", _param0)
	ret0, _ := ret[0].([]models.ShopCard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCardRepositoryRecorder) GetCardsForShop(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCardsForShop", arg0)
}

func (_m *MockCardRepository) GetShopSellers(_param0 uint) ([]uint, error) {
	ret := _m.ctrl.Call(_m, "GetShopSellers", _param0)
	ret0, _ := ret[0].([]uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCardRepositoryRecorder) GetShopSellers(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetShopSellers", arg0)
}

func (_m *MockCardRepository) GetShopSupplierID(_param0 uint) (uint, error) {
	ret := _m.ctrl.Call(_m, "GetShopSupplierID", _param0)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCardRepositoryRecorder) GetShopSupplierID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetShopSupplierID", arg0)
}

func (_m *MockCardRepository) GetUserByID(_param0 uint) (*models.User, error) {
	ret := _m.ctrl.Call(_m, "GetUserByID", _param0)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCardRepositoryRecorder) GetUserByID(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUserByID", arg0)
}
